<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lemon.api.runner.dao.ApiMapper">

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, api_classification_id, name, method, url, create_user, create_time
    </sql>
    
    <select id="showApiListByProjectId" parameterType="String" resultType="apiListVo">
    	SELECT
    		t1.id,
			t1.name,
			t1.method,
			t1.url,
			t2. name as classificationname
		FROM
			api t1
		INNER JOIN api_classification t2 ON t1.api_classification_id = t2.id
		AND t2.project_id = #{projectId}; 
    </select>
    
    <select id="showApiListByApiClassification" parameterType="String" resultType="apiListVo">
    	SELECT
    		t1.id,
			t1.name,
			t1.method,
			t1.url,
			t2. name as classificationname
		FROM
			api t1
		INNER JOIN api_classification t2 ON t1.api_classification_id = t2.id
		AND t2.id = ${apiClassificationId}; 
    </select>
    
     <select id="findApiSelectedMenu" parameterType="string" resultType="firstSecondMenuVO">
    	SELECT
			t2.`name` as firstLevelMenu,
			t1.`name` as secondLevelMenu
		FROM
			api t1
		INNER JOIN api_classification t2 ON t1.api_classification_id = t2.id
		AND t1.id = #{apiId};
    </select>
    
    <select id="findApiViewVO" parameterType="string" resultMap="apiViewVOMap">
    	SELECT
			t1. name,
			t1.method,
			t1.url,
			t2.username AS createUser,
			t1.create_time AS createTime,
			t3.`name` as api_request_param_name,
			t3.param_type,
			t3.type,
			t3.example_data,
			t3.description
		FROM
			api t1
		INNER JOIN user t2 ON t1.create_user = t2.id
		LEFT JOIN api_request_param t3 ON t1.id = t3.api_id
		where t1.id = #{apiId}
    </select>
    
    
    <resultMap type="apiViewVO" id="apiViewVOMap">
    	<result column="name" property="name"/>
    	<result column="method" property="method"/>
    	<result column="url" property="url"/>
    	<result column="createUser" property="createUser"/>
    	<result column="createTime" property="createTime"/>
    	<collection property="requestParams" ofType="ApiRequestParam">
    		<result column="api_request_param_name" property="name"/>
    		<result column="param_type" property="paramType"/>
    		<result column="type" property="type"/>
    		<result column="example_data" property="exampleData"/>
    		<result column="description" property="description"/>
    	</collection>
    </resultMap>
    
    <update id="updateBasicInfo" parameterType="apiEditVO">
    	update api set name=#{name},method=#{method},url=#{url},api_classification_id=#{apiClassificationId} where id=#{id}
    </update>
    
    <select id="findApiEditVO" parameterType="string" resultMap="apiEidtVOMap">
    	SELECT
			t1.id,
			t1. name,
			t1.method,
			t1.url,
			t1.api_classification_id,
			t2.id as api_request_param_id,
			t2.api_id,
			t2. name as api_request_param_name,
			t2.param_type,
			t2.type,
			t2.example_data,
			t2.description
		FROM
			api t1
		LEFT JOIN api_request_param t2 ON t1.id = t2.api_id
		where t1.id = #{apiId};
    </select>
    
    <resultMap type="ApiEditVO" id="apiEidtVOMap">
    	<result column="id" property="id"/>
    	<result column="name" property="name"/>
    	<result column="method" property="method"/>
    	<result column="url" property="url"/>
    	<result column="api_classification_id" property="apiClassificationId"/>
    	<collection property="requestParams" ofType="ApiRequestParam">
    		<result column="api_request_param_id" property="id"/>
    		<result column="api_id" property="apiId"/>
    		<result column="api_request_param_name" property="name"/>
    		<result column="param_type" property="paramType"/>
    		<result column="type" property="type"/>
    		<result column="example_data" property="exampleData"/>
    		<result column="description" property="description"/>
    	</collection>
    </resultMap>
    
    
    <select id="findApiRunVO" parameterType="string" resultMap="apiRunVOMap">
    	SELECT
			t1.id,
			t1.method,
			t1.url,
			t4. HOST,
			t2.id as api_request_param_id,
			t2. name,
			t2.type,
			t2.example_data
		FROM
			api t1
		LEFT JOIN api_request_param t2 ON t1.id = t2.api_id
		INNER JOIN api_classification t3 ON t1.api_classification_id = t3.id
		INNER JOIN project t4 ON t3.project_id = t4.id
		WHERE
			t1.id = #{apiId}
    </select>
    
    <resultMap type="ApiRunVO" id="apiRunVOMap">
    	<result column="id" property="id"/>
    	<result column="method" property="method"/>
    	<result column="url" property="url"/>
    	<result column="host" property="host"/>
    	<collection property="requestParams" ofType="ApiRequestParam">
    		<result column="api_request_param_id" property="id"/>
    		<result column="name" property="name"/>
    		<result column="type" property="type"/>
    		<result column="example_data" property="exampleData"/>
    	</collection>
    </resultMap>
    
    
    <select id="findRelatedCaseByApiId" parameterType="string" resultType="Integer">
		SELECT
			distinct case_id
		FROM
			case_param_value t1
		INNER JOIN api_request_param t2 ON t1.api_request_param_id = t2.id
		AND t2.api_id = #{id}
	</select>
</mapper>
